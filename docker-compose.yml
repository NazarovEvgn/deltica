services:
  postgres:
    image: postgres:17-alpine
    container_name: deltica_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-deltica_prod}
      POSTGRES_USER: ${DB_USER:-deltica_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-deltica_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: .
    container_name: deltica_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-deltica_prod}
      DB_USER: ${DB_USER:-deltica_user}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./backend/backups:/app/backend/backups
      - ./backend/logs:/app/backend/logs
      - ./backend/generated_documents:/app/backend/generated_documents
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
