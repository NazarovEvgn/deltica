"""add archive tables for equipment

Revision ID: 168ffc404f69
Revises: 88f8d0e8cb6d
Create Date: 2025-10-15 20:59:59.388664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '168ffc404f69'
down_revision: Union[str, Sequence[str], None] = '88f8d0e8cb6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('archived_equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('equipment_name', sa.String(), nullable=False),
    sa.Column('equipment_model', sa.String(), nullable=False),
    sa.Column('equipment_type', postgresql.ENUM('SI', 'IO', name='equipment_type_enum', create_type=False), nullable=False),
    sa.Column('equipment_specs', sa.String(), nullable=True),
    sa.Column('factory_number', sa.String(), nullable=False),
    sa.Column('inventory_number', sa.String(), nullable=False),
    sa.Column('equipment_year', sa.Integer(), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('archive_reason', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_archived_equipment'))
    )
    op.create_index(op.f('ix_archived_equipment_id'), 'archived_equipment', ['id'], unique=False)
    op.create_index(op.f('ix_archived_equipment_original_id'), 'archived_equipment', ['original_id'], unique=False)
    op.create_table('archived_equipment_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archived_equipment_id', sa.Integer(), nullable=False),
    sa.Column('original_equipment_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_type', postgresql.ENUM('certificate', 'passport', 'technical_doc', 'other', name='file_type_enum', create_type=False), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['archived_equipment_id'], ['archived_equipment.id'], name=op.f('fk_archived_equipment_files_archived_equipment_id_archived_equipment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_archived_equipment_files'))
    )
    op.create_index(op.f('ix_archived_equipment_files_id'), 'archived_equipment_files', ['id'], unique=False)
    op.create_table('archived_finance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archived_equipment_id', sa.Integer(), nullable=False),
    sa.Column('original_equipment_id', sa.Integer(), nullable=False),
    sa.Column('cost_rate', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('coefficient', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('invoice_number', sa.String(), nullable=True),
    sa.Column('paid_amount', sa.Float(), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['archived_equipment_id'], ['archived_equipment.id'], name=op.f('fk_archived_finance_archived_equipment_id_archived_equipment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_archived_finance'))
    )
    op.create_index(op.f('ix_archived_finance_id'), 'archived_finance', ['id'], unique=False)
    op.create_table('archived_responsibility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archived_equipment_id', sa.Integer(), nullable=False),
    sa.Column('original_equipment_id', sa.Integer(), nullable=False),
    sa.Column('department', sa.String(), nullable=False),
    sa.Column('responsible_person', sa.String(), nullable=False),
    sa.Column('verifier_org', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['archived_equipment_id'], ['archived_equipment.id'], name=op.f('fk_archived_responsibility_archived_equipment_id_archived_equipment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_archived_responsibility'))
    )
    op.create_index(op.f('ix_archived_responsibility_id'), 'archived_responsibility', ['id'], unique=False)
    op.create_table('archived_verification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archived_equipment_id', sa.Integer(), nullable=False),
    sa.Column('original_equipment_id', sa.Integer(), nullable=False),
    sa.Column('verification_type', postgresql.ENUM('calibration', 'verification', 'certification', name='verification_type_enum', create_type=False), nullable=False),
    sa.Column('registry_number', sa.String(), nullable=True),
    sa.Column('verification_interval', sa.Integer(), nullable=False),
    sa.Column('verification_date', sa.Date(), nullable=False),
    sa.Column('verification_due', sa.Date(), nullable=False),
    sa.Column('verification_plan', sa.Date(), nullable=False),
    sa.Column('verification_state', postgresql.ENUM('state_work', 'state_storage', 'state_verification', 'state_repair', 'state_archived', name='verification_state_enum', create_type=False), nullable=False),
    sa.Column('status', postgresql.ENUM('status_fit', 'status_expired', 'status_expiring', 'status_storage', 'status_verification', 'status_repair', name='verification_status_enum', create_type=False), nullable=False),
    sa.ForeignKeyConstraint(['archived_equipment_id'], ['archived_equipment.id'], name=op.f('fk_archived_verification_archived_equipment_id_archived_equipment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_archived_verification'))
    )
    op.create_index(op.f('ix_archived_verification_id'), 'archived_verification', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_archived_verification_id'), table_name='archived_verification')
    op.drop_table('archived_verification')
    op.drop_index(op.f('ix_archived_responsibility_id'), table_name='archived_responsibility')
    op.drop_table('archived_responsibility')
    op.drop_index(op.f('ix_archived_finance_id'), table_name='archived_finance')
    op.drop_table('archived_finance')
    op.drop_index(op.f('ix_archived_equipment_files_id'), table_name='archived_equipment_files')
    op.drop_table('archived_equipment_files')
    op.drop_index(op.f('ix_archived_equipment_original_id'), table_name='archived_equipment')
    op.drop_index(op.f('ix_archived_equipment_id'), table_name='archived_equipment')
    op.drop_table('archived_equipment')
    # ### end Alembic commands ###
