"""Add equipment_files table

Revision ID: 88f8d0e8cb6d
Revises: 9c0f57b4f3b7
Create Date: 2025-10-12 09:50:22.119632

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '88f8d0e8cb6d'
down_revision: Union[str, Sequence[str], None] = '9c0f57b4f3b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_type', sa.Enum('certificate', 'passport', 'technical_doc', 'other', name='file_type_enum'), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], name=op.f('fk_equipment_files_equipment_id_equipment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipment_files'))
    )
    op.create_index(op.f('ix_equipment_files_id'), 'equipment_files', ['id'], unique=False)
    op.alter_column('equipment', 'equipment_type',
               existing_type=postgresql.ENUM('SI', 'IO', name='equipment_type_enum'),
               comment=None,
               existing_comment='SI - средства измерения, IO - испытательное оборудование',
               existing_nullable=False)
    op.alter_column('equipment', 'equipment_specs',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Метрологическая характеристика',
               existing_nullable=True)
    op.alter_column('equipment', 'factory_number',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Заводской номер',
               existing_nullable=False)
    op.alter_column('equipment', 'inventory_number',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Инвентарный номер',
               existing_nullable=False)
    op.drop_table_comment(
        'equipment',
        existing_comment='Метрологическое оборудование',
        schema=None
    )
    op.drop_table_comment(
        'finance',
        existing_comment='Финансовые данные по стоимости верификации и оплате',
        schema=None
    )
    op.drop_table_comment(
        'responsibility',
        existing_comment='Данные о владельце оборудования и ответственных лицах',
        schema=None
    )
    op.alter_column('verification', 'verification_interval',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Межверификационный интервал в месяцах',
               existing_nullable=False)
    op.alter_column('verification', 'verification_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Дата последней верификации',
               existing_nullable=False)
    op.alter_column('verification', 'verification_plan',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Запланированный период сдачи на следующую верификацию',
               existing_nullable=False)
    op.drop_table_comment(
        'verification',
        existing_comment='Верификация оборудования',
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'verification',
        'Верификация оборудования',
        existing_comment=None,
        schema=None
    )
    op.alter_column('verification', 'verification_plan',
               existing_type=sa.DATE(),
               comment='Запланированный период сдачи на следующую верификацию',
               existing_nullable=False)
    op.alter_column('verification', 'verification_date',
               existing_type=sa.DATE(),
               comment='Дата последней верификации',
               existing_nullable=False)
    op.alter_column('verification', 'verification_interval',
               existing_type=sa.INTEGER(),
               comment='Межверификационный интервал в месяцах',
               existing_nullable=False)
    op.create_table_comment(
        'responsibility',
        'Данные о владельце оборудования и ответственных лицах',
        existing_comment=None,
        schema=None
    )
    op.create_table_comment(
        'finance',
        'Финансовые данные по стоимости верификации и оплате',
        existing_comment=None,
        schema=None
    )
    op.create_table_comment(
        'equipment',
        'Метрологическое оборудование',
        existing_comment=None,
        schema=None
    )
    op.alter_column('equipment', 'inventory_number',
               existing_type=sa.VARCHAR(),
               comment='Инвентарный номер',
               existing_nullable=False)
    op.alter_column('equipment', 'factory_number',
               existing_type=sa.VARCHAR(),
               comment='Заводской номер',
               existing_nullable=False)
    op.alter_column('equipment', 'equipment_specs',
               existing_type=sa.VARCHAR(),
               comment='Метрологическая характеристика',
               existing_nullable=True)
    op.alter_column('equipment', 'equipment_type',
               existing_type=postgresql.ENUM('SI', 'IO', name='equipment_type_enum'),
               comment='SI - средства измерения, IO - испытательное оборудование',
               existing_nullable=False)
    op.drop_index(op.f('ix_equipment_files_id'), table_name='equipment_files')
    op.drop_table('equipment_files')
    # ### end Alembic commands ###
